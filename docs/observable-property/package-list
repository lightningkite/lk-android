$dokka.format:html
$dokka.linkExtension:html
$dokka.location:lk.kotlin.observable.property$reducing(kotlin.collections.List((lk.kotlin.observable.property.ObservableProperty((lk.kotlin.observable.property.reducing.E)))), kotlin.Function1((kotlin.collections.List((lk.kotlin.observable.property.reducing.E)), lk.kotlin.observable.property.reducing.T)))lk.kotlin.observable.property/kotlin.collections.-list/reducing.html
$dokka.location:lk.kotlin.observable.property$toObservablePropertyReference(kotlin.reflect.KMutableProperty0((lk.kotlin.observable.property.toObservablePropertyReference.T)))lk.kotlin.observable.property/kotlin.reflect.-k-mutable-property0/to-observable-property-reference.html
$dokka.location:lk.kotlin.observable.property$toObservablePropertyReference(kotlin.reflect.KMutableProperty1((lk.kotlin.observable.property.toObservablePropertyReference.R, lk.kotlin.observable.property.toObservablePropertyReference.T)), lk.kotlin.observable.property.toObservablePropertyReference.R)lk.kotlin.observable.property/kotlin.reflect.-k-mutable-property1/to-observable-property-reference.html
$dokka.location:lk.kotlin.observable.property.jvm$captureProgress(kotlin.Function0((lk.kotlin.observable.property.jvm.captureProgress.T)), lk.kotlin.observable.property.MutableObservableProperty((kotlin.Boolean)), java.util.concurrent.Executor)lk.kotlin.observable.property.jvm/kotlin.-function0/capture-progress.html
$dokka.location:lk.kotlin.observable.property.jvm$captureProgress(kotlin.Function0((lk.kotlin.observable.property.jvm.captureProgress.T)), lk.kotlin.observable.property.MutableObservableProperty((kotlin.Int)), java.util.concurrent.Executor)lk.kotlin.observable.property.jvm/kotlin.-function0/capture-progress.html
lk.kotlin.observable.property
lk.kotlin.observable.property.jvm
lk.kotlin.observable.property.lifecycle
