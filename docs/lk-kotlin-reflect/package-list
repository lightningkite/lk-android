$dokka.format:html
$dokka.linkExtension:html
$dokka.location:lk.kotlin.reflect$enumValues#kotlin.reflect.KClass((kotlin.Any))lk.kotlin.reflect/kotlin.reflect.-k-class/enum-values.html
$dokka.location:lk.kotlin.reflect$fastFunctions#kotlin.reflect.KClass((kotlin.Any))lk.kotlin.reflect/kotlin.reflect.-k-class/fast-functions.html
$dokka.location:lk.kotlin.reflect$fastMutableProperties#kotlin.reflect.KClass((lk.kotlin.reflect.fastMutableProperties.T))lk.kotlin.reflect/kotlin.reflect.-k-class/fast-mutable-properties.html
$dokka.location:lk.kotlin.reflect$fastProperties#kotlin.reflect.KClass((lk.kotlin.reflect.fastProperties.T))lk.kotlin.reflect/kotlin.reflect.-k-class/fast-properties.html
$dokka.location:lk.kotlin.reflect$fastSuperclasses#kotlin.reflect.KClass((kotlin.Any))lk.kotlin.reflect/kotlin.reflect.-k-class/fast-superclasses.html
$dokka.location:lk.kotlin.reflect$fastType#kotlin.reflect.KProperty1((kotlin.Any, ))lk.kotlin.reflect/kotlin.reflect.-k-property1/fast-type.html
$dokka.location:lk.kotlin.reflect$isEnum#kotlin.reflect.KClass((kotlin.Any))lk.kotlin.reflect/kotlin.reflect.-k-class/is-enum.html
$dokka.location:lk.kotlin.reflect$reflectAsmConstruct(kotlin.reflect.KClass((lk.kotlin.reflect.reflectAsmConstruct.T)))lk.kotlin.reflect/kotlin.reflect.-k-class/reflect-asm-construct.html
$dokka.location:lk.kotlin.reflect$reflectAsmConstructorAccess#kotlin.reflect.KClass((lk.kotlin.reflect.reflectAsmConstructorAccess.T))lk.kotlin.reflect/kotlin.reflect.-k-class/reflect-asm-constructor-access.html
$dokka.location:lk.kotlin.reflect$reflectAsmFieldAccess#kotlin.reflect.KClass((kotlin.Any))lk.kotlin.reflect/kotlin.reflect.-k-class/reflect-asm-field-access.html
$dokka.location:lk.kotlin.reflect$reflectAsmGet(kotlin.reflect.KProperty1((kotlin.Any, )), kotlin.Any)lk.kotlin.reflect/kotlin.reflect.-k-property1/reflect-asm-get.html
$dokka.location:lk.kotlin.reflect$reflectAsmInvoke(kotlin.reflect.KFunction((kotlin.Any)), kotlin.Any, kotlin.Array((kotlin.Any)))lk.kotlin.reflect/kotlin.reflect.-k-function/reflect-asm-invoke.html
$dokka.location:lk.kotlin.reflect$reflectAsmMethodAccess#kotlin.reflect.KClass((kotlin.Any))lk.kotlin.reflect/kotlin.reflect.-k-class/reflect-asm-method-access.html
$dokka.location:lk.kotlin.reflect$reflectAsmSet(kotlin.reflect.KMutableProperty1((kotlin.Any, )), kotlin.Any, kotlin.Any)lk.kotlin.reflect/kotlin.reflect.-k-mutable-property1/reflect-asm-set.html
lk.kotlin.reflect
